== should format basic ==
body{color:#000}

[expect]
body {
    color: #000;
}

== should format combined ==

body   {
  margin: 0;

  font-family: -apple-system, BlinkMacSystemFont, "Ubuntu", sans-serif;
  -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing: grayscale; }

body {



  background-color    :
      black                  !important         ;
}

#id

{
  padding-left: 50vh;

  height:   100em;
}

.class,


.another-class {

             background: #abcdef !important;

}

#element    {





  width: 100%;
  color: rgb(0, 128, 255);

}

*  {  }
::before,::after{--tw-content: '';}

selector:pseudo-class {
}

abbr:where([title]) {
  text-decoration: underline dotted;
}
a[class~="logo"], a[href$=".org"], a[href*="example"], a[href^="http"],div[lang|="zh"],a[href*="cAsE" s]{
    padding: 2px;
}

[expect]
body {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Ubuntu", sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

body {
    background-color: black !important;
}

#id {
    padding-left: 50vh;
    height: 100em;
}

.class,
.another-class {
    background: #abcdef !important;
}

#element {
    width: 100%;
    color: rgb(0, 128, 255);
}

* {}

::before,
::after {
    --tw-content: '';
}

selector:pseudo-class {}

abbr:where([title]) {
    text-decoration: underline dotted;
}

a[class~="logo"],
a[href$=".org"],
a[href*="example"],
a[href^="http"],
div[lang|="zh"],
a[href*="cAsE" s] {
    padding: 2px;
}
